// Generator: Indicates that you want to generate Prisma Client
generator client {
  provider = "prisma-client-js"
}

// Data source: Specifies your database connection (via an environment variable)
datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// Data model: Defines your application models
model Customer {
  id Int @id @default(autoincrement())
  name String
  contact Contact?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tickets Ticket[]
}

model Contact {
  id Int @id @default(autoincrement())
  customerId Int @unique
  phone String
  email String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  customer Customer @relation(fields: [customerId], references: [id])
}

model Movie {
  id Int @id @default(autoincrement())
  title String
  runtimeMins Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screenings Screening[]
}

model Screening {
  id Int @id @default(autoincrement())
  startsAt DateTime 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  movieId Int      
  movie Movie @relation(fields: [movieId], references: [id])
  screenId Int
  screen Screen @relation(fields: [screenId], references: [id])
  tickets Ticket[]

}

model Screen {
  id Int @id @default(autoincrement())
  number Int      
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screenings Screening[]
}

model Ticket {
  id Int @id @default(autoincrement())  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  customerId Int
  customer Customer @relation(fields: [customerId], references: [id])
  screeningId Int
  screening Screening @relation(fields: [screeningId], references: [id])
}