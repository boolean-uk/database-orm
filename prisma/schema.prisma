generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  tickets    Ticket[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact   Contact?
}

model Contact {
  id        Int     @id  @default(autoincrement())
  phone     String
  customerId Int   @unique
  customer  Customer  @relation(fields: [customerId], references: [id])
  email     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Movie {
  id  Int @id @default(autoincrement())
  title String
  runtimeMins Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  screenings Screening[]
}

model Screening {
  id  Int @id @default(autoincrement())
  movie     Movie   @relation(fields: [movieId], references: [id])
  screen    Screen  @relation(fields: [screenId], references: [id])
  movieId  Int
  screenId  Int
  tickets    Ticket[]
  startsAt  DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Screen {
  id  Int @id @default(autoincrement())
  number  Int
  screenings Screening[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Ticket {
  id  Int @id @default(autoincrement())
  screeningId  Int
  screening Screening @relation(fields:[screeningId], references:[id])
  customerId Int
  customer  Customer  @relation(fields:[customerId], references:[id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}