generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact   Contact?
  ticket Ticket?
}

model Contact {
  id        Int      @id @default(autoincrement())
  customer  Customer @relation(fields: [customerId], references: [id])
  customerId Int     @unique
  phone     String
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie {
  id        Int      @id @default(autoincrement())
  title      String
  runTimeMins Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screenings Screening[]
}

model Screening {
  id        Int      @id @default(autoincrement())
  movie Movie        @relation(fields: [movieId], references: [id])
  movieId   Int      @unique
  startAt   DateTime  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screen Screen?
  ticket Ticket?
}

model Screen {
  id        Int      @id @default(autoincrement())
  number    Int
  screening Screening  @relation(fields: [screeningId], references: [id])
  screeningId Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket { 
  id Int   @id @default(autoincrement())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   customer Customer  @relation(fields: [customerId], references: [id])
   screening Screening @relation(fields: [screeningId], references: [id])
   customerId Int @unique
   screeningId Int @unique
}


