generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact   Contact?
  ticket    Ticket[]
}

model Contact {
  id        Int      @id @default(autoincrement())
  customer  Customer @relation(fields: [customerID], references: [id])
  customerID Int     @unique
  phone     String
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie {
  id        Int      @id @default(autoincrement())
  title     String
  runtimeMins Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screenings Screening[]
}

model Screening {
  id        Int     @id @default(autoincrement())
  movie     Movie   @relation(fields: [movieID], references: [id])
  movieID   Int     @unique
  screen    Screen? @relation(fields: [screenID], references: [id])
  screenID  Int?    @unique
  startsAt  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tickets    Ticket[]
}

model Screen {
  id        Int     @id @default(autoincrement())
  number    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screenings Screening[]
}

model Ticket {
  id        Int     @id @default(autoincrement())
  customer  Customer? @relation(fields: [customerID], references: [id])
  screening Screening? @relation(fields: [screeningID], references: [id])
  screeningID Int?  
  customerID  Int?  
}