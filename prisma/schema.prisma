generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  contact   Contact?
  tickets   Ticket[]
}

model Contact {
  id            Int         @id @default(autoincrement())
  phone         String
  email         String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt 
  customerId    Int         @unique
  customer      Customer    @relation(fields: [customerId], references: [id])
}

model Movie {
  id           Int        @id @default(autoincrement())
  title        String
  runtimeMins  Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt 
  screenings   Screening[]
}

model Screen {
  id           Int        @id @default(autoincrement())
  screenings   Screening[]
  number       Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt 
}

model Screening {
  id          Int        @id @default(autoincrement())
  startsAt    DateTime   @updatedAt
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt 
  movieId     Int
  movie       Movie      @relation(fields: [movieId], references: [id])
  screenId    Int
  screen      Screen     @relation(fields: [screenId], references: [id])
  tickets     Ticket[]
}

model Ticket {
  id          Int        @id @default(autoincrement())
  customerId  Int
  customer    Customer   @relation(fields: [customerId], references: [id])
  screeningId Int
  screening   Screening  @relation(fields: [screeningId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt 

}

